// Copyright (c) 2019 Blake Covarrubias
//
// This software is released under the MIT License.
// https://opensource.org/licenses/MIT

const crypto = require('crypto');

module.exports = function(context) {
  const hubspot = context.request.getEnvironmentVariable('hubspot');

  if (hubspot) {
    const request = context.request;
    const bodyText = request.getBodyText();
    const signatureType = hubspot.signatureType || 'application';

    // String to hash
    let sourceString = hubspot.secret;

    switch (signatureType) {
      case 'application':
        // Application signatures are generated by concatenating the
        // secret, HTTP method, URI, and request body (if present),
        // then hashing the resultant string
        sourceString += `${request.getMethod()}${request.getUrl()}`;

        // Append body to source string if present
        if (bodyText.length > 0) {
          sourceString += bodyText;
        }

        break;
      case 'webhook':
        // Webhook signatures are generated by concatenating the
        // secret and request body, and hashing the resultant string

        // Require request body for Webhook signatures
        if (!bodyText.length || bodyText.length == 0) {
          return null;
        }

        sourceString += bodyText;

        break;
    }

    // Return request signature
    const signature = crypto.createHash('sha256').update(sourceString)
        .digest('hex');

    // Set signature header only if not already present.
    if (!request.hasHeader('X-HubSpot-Signature')) {
      request.setHeader('X-HubSpot-Signature', signature);
    }
  }
};
